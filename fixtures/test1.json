[
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG PHP_VERSION=8.2",
        "start_line": 4,
        "end_line": 4,
        "flags": [],
        "value": [
            "PHP_VERSION=8.2"
        ]
    },
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG NGINX_VERSION=1.23",
        "start_line": 5,
        "end_line": 5,
        "flags": [],
        "value": [
            "NGINX_VERSION=1.23"
        ]
    },
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG ALPINE_VERSION=3",
        "start_line": 6,
        "end_line": 6,
        "flags": [],
        "value": [
            "ALPINE_VERSION=3"
        ]
    },
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG REGISTRY=ghcr.io/itautomotive-dev/golden-docker-images/",
        "start_line": 7,
        "end_line": 7,
        "flags": [],
        "value": [
            "REGISTRY=ghcr.io/itautomotive-dev/golden-docker-images/"
        ]
    },
    {
        "cmd": "FROM",
        "sub_cmd": null,
        "json": false,
        "original": "FROM ${REGISTRY}php:${PHP_VERSION}-fpm-alpine${ALPINE_VERSION} AS symfony_php",
        "start_line": 13,
        "end_line": 13,
        "flags": [],
        "value": [
            "${REGISTRY}php:${PHP_VERSION}-fpm-alpine${ALPINE_VERSION}",
            "AS",
            "symfony_php"
        ]
    },
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG APP_ENV=prod",
        "start_line": 14,
        "end_line": 14,
        "flags": [],
        "value": [
            "APP_ENV=prod"
        ]
    },
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG CONF_NAME=${APP_ENV}",
        "start_line": 15,
        "end_line": 15,
        "flags": [],
        "value": [
            "CONF_NAME=${APP_ENV}"
        ]
    },
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG BUILD_VERSION",
        "start_line": 16,
        "end_line": 16,
        "flags": [],
        "value": [
            "BUILD_VERSION"
        ]
    },
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG BUILD_SHA",
        "start_line": 17,
        "end_line": 17,
        "flags": [],
        "value": [
            "BUILD_SHA"
        ]
    },
    {
        "cmd": "ENV",
        "sub_cmd": null,
        "json": false,
        "original": "ENV BUILD_VERSION=${BUILD_VERSION}",
        "start_line": 18,
        "end_line": 18,
        "flags": [],
        "value": [
            "BUILD_VERSION",
            "${BUILD_VERSION}"
        ]
    },
    {
        "cmd": "ENV",
        "sub_cmd": null,
        "json": false,
        "original": "ENV BUILD_SHA=${BUILD_SHA}",
        "start_line": 19,
        "end_line": 19,
        "flags": [],
        "value": [
            "BUILD_SHA",
            "${BUILD_SHA}"
        ]
    },
    {
        "cmd": "ENV",
        "sub_cmd": null,
        "json": false,
        "original": "ENV IT_SYMFONY_DOC_MIGRAT_MIGRAT=true",
        "start_line": 20,
        "end_line": 20,
        "flags": [],
        "value": [
            "IT_SYMFONY_DOC_MIGRAT_MIGRAT",
            "true"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data composer.json ./",
        "start_line": 23,
        "end_line": 23,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "composer.json",
            "./"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data composer.lock ./",
        "start_line": 24,
        "end_line": 24,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "composer.lock",
            "./"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data symfony.lock ./",
        "start_line": 25,
        "end_line": 25,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "symfony.lock",
            "./"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data auth.json ./",
        "start_line": 26,
        "end_line": 26,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "auth.json",
            "./"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data package*.json ./",
        "start_line": 27,
        "end_line": 27,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "package*.json",
            "./"
        ]
    },
    {
        "cmd": "RUN",
        "sub_cmd": null,
        "json": false,
        "original": "RUN set -eux && \tcomposer install --prefer-dist --no-autoloader --no-scripts --no-progress && \tcomposer clear-cache",
        "start_line": 29,
        "end_line": 31,
        "flags": [],
        "value": [
            "set -eux && \tcomposer install --prefer-dist --no-autoloader --no-scripts --no-progress && \tcomposer clear-cache"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data docker/symfony/.env.${CONF_NAME} ./.env",
        "start_line": 34,
        "end_line": 34,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "docker/symfony/.env.${CONF_NAME}",
            "./.env"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data docker/symfony/.env.test .env.test",
        "start_line": 35,
        "end_line": 35,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "docker/symfony/.env.test",
            ".env.test"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data bin bin/",
        "start_line": 36,
        "end_line": 36,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "bin",
            "bin/"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data config config/",
        "start_line": 37,
        "end_line": 37,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "config",
            "config/"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data public public/",
        "start_line": 38,
        "end_line": 38,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "public",
            "public/"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data src src/",
        "start_line": 39,
        "end_line": 39,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "src",
            "src/"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data templates templates/",
        "start_line": 40,
        "end_line": 40,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "templates",
            "templates/"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data migrations migrations/",
        "start_line": 41,
        "end_line": 41,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "migrations",
            "migrations/"
        ]
    },
    {
        "cmd": "COPY",
        "sub_cmd": null,
        "json": false,
        "original": "COPY --chown=www-data:www-data data_migrations data_migrations/",
        "start_line": 42,
        "end_line": 42,
        "flags": [
            "--chown=www-data:www-data"
        ],
        "value": [
            "data_migrations",
            "data_migrations/"
        ]
    },
    {
        "cmd": "RUN",
        "sub_cmd": null,
        "json": false,
        "original": "RUN set -eux &&     chown www-data:www-data -R var && \tcomposer dump-autoload --classmap-authoritative && \tchmod +x bin/console &&   rm auth.json && \tsync",
        "start_line": 44,
        "end_line": 49,
        "flags": [],
        "value": [
            "set -eux &&     chown www-data:www-data -R var && \tcomposer dump-autoload --classmap-authoritative && \tchmod +x bin/console &&   rm auth.json && \tsync"
        ]
    },
    {
        "cmd": "VOLUME",
        "sub_cmd": null,
        "json": false,
        "original": "VOLUME /srv/app/var",
        "start_line": 51,
        "end_line": 51,
        "flags": [],
        "value": [
            "/srv/app/var"
        ]
    },
    {
        "cmd": "VOLUME",
        "sub_cmd": null,
        "json": false,
        "original": "VOLUME /srv/app/public",
        "start_line": 52,
        "end_line": 52,
        "flags": [],
        "value": [
            "/srv/app/public"
        ]
    },
    {
        "cmd": "FROM",
        "sub_cmd": null,
        "json": false,
        "original": "FROM symfony_php AS symfony_php_dev",
        "start_line": 57,
        "end_line": 57,
        "flags": [],
        "value": [
            "symfony_php",
            "AS",
            "symfony_php_dev"
        ]
    },
    {
        "cmd": "ARG",
        "sub_cmd": null,
        "json": false,
        "original": "ARG APP_ENV=dev",
        "start_line": 58,
        "end_line": 58,
        "flags": [],
        "value": [
            "APP_ENV=dev"
        ]
    },
    {
        "cmd": "RUN",
        "sub_cmd": null,
        "json": false,
        "original": "RUN XDEBUG_VERSION=`echo $PHP_VERSION | cut -f1,2 -d . | tr -d .` &&     apk add php${XDEBUG_VERSION}-pecl-xdebug &&     extDir=\"$(php -d 'display_errors=stderr' -r 'echo ini_get(\"extension_dir\");')\" &&     cp /usr/lib/php${XDEBUG_VERSION}/modules/xdebug.so ${extDir} &&     docker-php-ext-enable xdebug",
        "start_line": 60,
        "end_line": 64,
        "flags": [],
        "value": [
            "XDEBUG_VERSION=`echo $PHP_VERSION | cut -f1,2 -d . | tr -d .` &&     apk add php${XDEBUG_VERSION}-pecl-xdebug &&     extDir=\"$(php -d 'display_errors=stderr' -r 'echo ini_get(\"extension_dir\");')\" &&     cp /usr/lib/php${XDEBUG_VERSION}/modules/xdebug.so ${extDir} &&     docker-php-ext-enable xdebug"
        ]
    },
    {
        "cmd": "RUN",
        "sub_cmd": null,
        "json": false,
        "original": "RUN rm $PHP_INI_DIR/php.ini && ln -s $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini",
        "start_line": 66,
        "end_line": 66,
        "flags": [],
        "value": [
            "rm $PHP_INI_DIR/php.ini && ln -s $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini"
        ]
    },
    {
        "cmd": "RUN",
        "sub_cmd": null,
        "json": false,
        "original": "RUN echo \"\" > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \techo \"zend_extension=xdebug.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \techo \"xdebug.cli_color=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \techo \"xdebug.mode=develop,debug,coverage\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \techo \"xdebug.client_host=host.docker.internal\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini",
        "start_line": 68,
        "end_line": 72,
        "flags": [],
        "value": [
            "echo \"\" > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \techo \"zend_extension=xdebug.so\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \techo \"xdebug.cli_color=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \techo \"xdebug.mode=develop,debug,coverage\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \techo \"xdebug.client_host=host.docker.internal\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
        ]
    }
]